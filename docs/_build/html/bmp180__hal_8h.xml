<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="bmp180__hal_8h" kind="file" language="C++">
    <compoundname>bmp180_hal.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includedby refid="bmp180__hal_8c" local="yes">/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.h</label>
        <link refid="bmp180__hal_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structbmp180__t" prot="public">bmp180_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="bmp180__hal_8h_1a232f5b4c91dfeb0942b3a352bfe41a06" prot="public" static="no">
        <name>HAL_LIB</name>
        <initializer>&quot;stm32f4xx_hal.h&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Ceyhun Sen </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.h" line="8" column="9" bodyfile="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="bmp180__hal_8h_1a5434803771584ca0b5ff4f35940f9faf" prot="public" static="no">
        <type>struct <ref refid="structbmp180__t" kindref="compound">bmp180_t</ref></type>
        <definition>typedef struct bmp180_t bmp180_t</definition>
        <argsstring></argsstring>
        <name>bmp180_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.h" line="39" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bmp180__hal_8h_1a1bf6d9e076ce7c192db6d1505463c2f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t BMP180_init</definition>
        <argsstring>(I2C_HandleTypeDef *hi2cx, bmp180_t *bmp180, uint8_t oss)</argsstring>
        <name>BMP180_init</name>
        <param>
          <type>I2C_HandleTypeDef *</type>
          <declname>hi2cx</declname>
        </param>
        <param>
          <type><ref refid="structbmp180__t" kindref="compound">bmp180_t</ref> *</type>
          <declname>bmp180</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>oss</declname>
        </param>
        <briefdescription>
<para>Initialize callibration values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success, 1 on fail </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.h" line="41" column="9" bodyfile="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.c" bodystart="25" bodyend="68" declfile="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.h" declline="41" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="bmp180__hal_8h_1af57a5c3bb77d11ebbbeb0b1be69cba62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMP180_get_all</definition>
        <argsstring>(I2C_HandleTypeDef *hi2cx, bmp180_t *bmp180)</argsstring>
        <name>BMP180_get_all</name>
        <param>
          <type>I2C_HandleTypeDef *</type>
          <declname>hi2cx</declname>
        </param>
        <param>
          <type><ref refid="structbmp180__t" kindref="compound">bmp180_t</ref> *</type>
          <declname>bmp180</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.h" line="42" column="6" bodyfile="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.c" bodystart="70" bodyend="75" declfile="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.h" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bmp180__hal_8h_1a030537d8895a417b4a75007a83fe20a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMP180_get_temperature</definition>
        <argsstring>(I2C_HandleTypeDef *hi2cx, bmp180_t *bmp180)</argsstring>
        <name>BMP180_get_temperature</name>
        <param>
          <type>I2C_HandleTypeDef *</type>
          <declname>hi2cx</declname>
        </param>
        <param>
          <type><ref refid="structbmp180__t" kindref="compound">bmp180_t</ref> *</type>
          <declname>bmp180</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.h" line="43" column="6" bodyfile="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.c" bodystart="87" bodyend="96" declfile="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.h" declline="43" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bmp180__hal_8h_1a7bea00339ccf04f30f7cdbe423432b21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMP180_get_pressure</definition>
        <argsstring>(I2C_HandleTypeDef *hi2cx, bmp180_t *bmp180)</argsstring>
        <name>BMP180_get_pressure</name>
        <param>
          <type>I2C_HandleTypeDef *</type>
          <declname>hi2cx</declname>
        </param>
        <param>
          <type><ref refid="structbmp180__t" kindref="compound">bmp180_t</ref> *</type>
          <declname>bmp180</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.h" line="44" column="6" bodyfile="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.c" bodystart="125" bodyend="149" declfile="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.h" declline="44" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bmp180__hal_8h_1a105fd869b1733c68652c2c28b974d39a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMP180_get_altitude</definition>
        <argsstring>(I2C_HandleTypeDef *hi2cx, bmp180_t *bmp180)</argsstring>
        <name>BMP180_get_altitude</name>
        <param>
          <type>I2C_HandleTypeDef *</type>
          <declname>hi2cx</declname>
        </param>
        <param>
          <type><ref refid="structbmp180__t" kindref="compound">bmp180_t</ref> *</type>
          <declname>bmp180</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.h" line="45" column="6" bodyfile="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.c" bodystart="151" bodyend="154" declfile="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.h" declline="45" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bmp180__hal_8h_1a6ddcc66a416ca0d5cbbe4dacf3bc29b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BMP180_set_sea_pressure</definition>
        <argsstring>(I2C_HandleTypeDef *hi2cx, bmp180_t *bmp180, uint32_t sea_pressure)</argsstring>
        <name>BMP180_set_sea_pressure</name>
        <param>
          <type>I2C_HandleTypeDef *</type>
          <declname>hi2cx</declname>
        </param>
        <param>
          <type><ref refid="structbmp180__t" kindref="compound">bmp180_t</ref> *</type>
          <declname>bmp180</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sea_pressure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.h" line="46" column="6" bodyfile="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.c" bodystart="156" bodyend="159" declfile="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.h" declline="46" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__BMP180_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__BMP180_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_LIB<sp/>&quot;stm32f4xx_hal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>HAL_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="structbmp180__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbmp180__t" kindref="compound">bmp180_t</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>temperature;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pressure;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>altitude;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sea_pressure;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/><sp/><sp/>oss;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Callibration<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><sp/>AC1;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><sp/>AC2;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><sp/>AC3;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>AC4;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>AC5;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>AC6;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><sp/>B1;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><sp/>B2;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><sp/>B3;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>B4;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><sp/>B5;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><sp/>B6;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>B7;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><sp/>MB;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><sp/>MC;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><sp/>MD;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}<sp/><ref refid="structbmp180__t" kindref="compound">bmp180_t</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">uint8_t<sp/>BMP180_init(I2C_HandleTypeDef<sp/>*hi2cx,<sp/><ref refid="structbmp180__t" kindref="compound">bmp180_t</ref><sp/>*bmp180,<sp/>uint8_t<sp/>oss);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BMP180_get_all(I2C_HandleTypeDef<sp/>*hi2cx,<sp/><ref refid="structbmp180__t" kindref="compound">bmp180_t</ref><sp/>*bmp180);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BMP180_get_temperature(I2C_HandleTypeDef<sp/>*hi2cx,<sp/><ref refid="structbmp180__t" kindref="compound">bmp180_t</ref><sp/>*bmp180);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BMP180_get_pressure(I2C_HandleTypeDef<sp/>*hi2cx,<sp/><ref refid="structbmp180__t" kindref="compound">bmp180_t</ref><sp/>*bmp180);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BMP180_get_altitude(I2C_HandleTypeDef<sp/>*hi2cx,<sp/><ref refid="structbmp180__t" kindref="compound">bmp180_t</ref><sp/>*bmp180);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BMP180_set_sea_pressure(I2C_HandleTypeDef<sp/>*hi2cx,<sp/><ref refid="structbmp180__t" kindref="compound">bmp180_t</ref><sp/>*bmp180,<sp/>uint32_t<sp/>sea_pressure);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ceyhunsen/Documents/projects/bmp180-stm32-driver/bmp180_hal.h"/>
  </compounddef>
</doxygen>
